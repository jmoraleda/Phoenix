jobs:
- job: MacOS_CI
  timeoutInMinutes: 120
  displayName: 'MacOS CI'
  pool:
    vmImage: 'macOS-12'
  strategy:
    matrix:
      Py311:
        python.version: '3.11'
      Py312:
        python.version: '3.12'

  variables:
    PYTHONUNBUFFERED: '1'
    CCACHE_DIR: $(Pipeline.Workspace)/ccache

  steps:
  - checkout: self
    submodules: recursive

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      brew install ccache
      echo "##vso[task.prependpath]/usr/local/opt/ccache/libexec"
    displayName: 'Install brew package requirements & setup ccache'

  - task: Cache@2
    inputs:
      key: 'ccache | "$(Agent.OS)" | "$(python.version)" | "$(Build.BuildNumber)"'
      path: $(CCACHE_DIR)
      restoreKeys: |
        ccache | "$(Agent.OS)" | "$(python.version)"
    displayName: ccache

  - script: |
      python -m pip install -U setuptools wheel
      python -m pip install -r requirements.txt
    displayName: 'Install Python dependencies'

  - script: |
      xcode-select --print-path
      python build.py --jobs=4 build_wx
    displayName: 'build wxWidgets'

  - script: |
      python build.py dox etg --nodoc sip
    displayName: 'generate code'

  - script: |
      python build.py --jobs=4 build_py
    displayName: 'build wxPython'

  - script: |
      python build.py bdist_wheel
      python -m pip install dist/wxPythonMeticy-*.whl
      python -c "import wx; print(f'Successfully tested importing wx version {wx.version()}');"
    displayName: 'build wheel and test install'
    
  - task: TwineAuthenticate@1
    inputs:
      artifactFeed: wxPythonMeticy/release_artifacts
    displayName: 'Twine Authenticate'

  - script: |
      python -m twine upload -r release_artifacts --config-file $(PYPIRC_PATH) dist/*
    displayName: 'Upload to feed'
